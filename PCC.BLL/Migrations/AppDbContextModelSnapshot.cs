// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCC.BLL;

#nullable disable

namespace PCC.BLL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCC.BLL.Data.Komponenta", b =>
                {
                    b.Property<int>("KomponentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KomponentaID"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PorudzbinaID")
                        .HasColumnType("int");

                    b.Property<double?>("ProdajnaCena")
                        .HasColumnType("float");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("KomponentaID");

                    b.HasIndex("PorudzbinaID");

                    b.ToTable("Komponente");
                });

            modelBuilder.Entity("PCC.BLL.Data.Komponenta_Porudzbina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KomponentaID")
                        .HasColumnType("int");

                    b.Property<int>("PorudzbinaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomponentaID");

                    b.HasIndex("PorudzbinaID");

                    b.ToTable("Komponenta_Porudzbine");
                });

            modelBuilder.Entity("PCC.BLL.Data.Lokacija", b =>
                {
                    b.Property<int>("LokacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LokacijaID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Odeljenje")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LokacijaID");

                    b.ToTable("Lokacije");
                });

            modelBuilder.Entity("PCC.BLL.Data.Nalog", b =>
                {
                    b.Property<int>("NalogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NalogID"));

                    b.Property<DateTime>("Izdato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Izvrsen")
                        .HasColumnType("datetime2");

                    b.HasKey("NalogID");

                    b.ToTable("Nalozi");
                });

            modelBuilder.Entity("PCC.BLL.Data.Porudzbina", b =>
                {
                    b.Property<int>("PorudzbinaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PorudzbinaID"));

                    b.Property<int>("LokacijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Preuzeto")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VremeIsporuke")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremePorudzbine")
                        .HasColumnType("datetime2");

                    b.HasKey("PorudzbinaID");

                    b.HasIndex("LokacijaID");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun", b =>
                {
                    b.Property<int>("RacunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RacunID"));

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("RacunID");

                    b.HasIndex("LokacijaID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun_Komponenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KomponentaID")
                        .HasColumnType("int");

                    b.Property<int>("RacunID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomponentaID");

                    b.HasIndex("RacunID");

                    b.ToTable("Racun_Komponenta");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun_Racunar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RacunID")
                        .HasColumnType("int");

                    b.Property<int>("RacunarID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RacunID");

                    b.HasIndex("RacunarID");

                    b.ToTable("Racun_Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar", b =>
                {
                    b.Property<int>("RacunarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RacunarID"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RacunarID");

                    b.ToTable("Racunari");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar_Komponenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KomponentaID")
                        .HasColumnType("int");

                    b.Property<int>("RacunarID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomponentaID");

                    b.HasIndex("RacunarID");

                    b.ToTable("Racunari_Komponente");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar_Nalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NalogID")
                        .HasColumnType("int");

                    b.Property<int>("RacunarID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NalogID");

                    b.HasIndex("RacunarID");

                    b.ToTable("Racunar_Nalog");
                });

            modelBuilder.Entity("PCC.BLL.Data.Stanje", b =>
                {
                    b.Property<int>("StanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StanjeID"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("KomponentaID")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("RacunarID")
                        .HasColumnType("int");

                    b.HasKey("StanjeID");

                    b.HasIndex("KomponentaID");

                    b.HasIndex("LokacijaID");

                    b.HasIndex("RacunarID");

                    b.ToTable("Stanja");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje", b =>
                {
                    b.Property<int>("TrebovanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrebovanjeID"));

                    b.Property<int>("NaLokacijuLokacijaID")
                        .HasColumnType("int");

                    b.Property<int>("PoslaoZaposleniID")
                        .HasColumnType("int");

                    b.Property<bool>("Preuzeto")
                        .HasColumnType("bit");

                    b.Property<int>("SaLokacijeLokacijaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremePreuzimanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremeSlanja")
                        .HasColumnType("datetime2");

                    b.HasKey("TrebovanjeID");

                    b.HasIndex("NaLokacijuLokacijaID");

                    b.HasIndex("PoslaoZaposleniID");

                    b.HasIndex("SaLokacijeLokacijaID");

                    b.ToTable("Trebovanja");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje_Komponenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KomponentaID")
                        .HasColumnType("int");

                    b.Property<int>("TrebovanjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomponentaID");

                    b.HasIndex("TrebovanjeID");

                    b.ToTable("Trebovanje_Komponenta");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje_Racunar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RacunarID")
                        .HasColumnType("int");

                    b.Property<int>("TrebovanjeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RacunarID");

                    b.HasIndex("TrebovanjeID");

                    b.ToTable("Trebovanje_Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Zaposleni", b =>
                {
                    b.Property<int>("ZaposleniID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaposleniID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LokacijaID")
                        .HasColumnType("int");

                    b.HasKey("ZaposleniID");

                    b.HasIndex("LokacijaID");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("PCC.BLL.Data.Komponenta", b =>
                {
                    b.HasOne("PCC.BLL.Data.Porudzbina", null)
                        .WithMany("ListaKomponenta")
                        .HasForeignKey("PorudzbinaID");
                });

            modelBuilder.Entity("PCC.BLL.Data.Komponenta_Porudzbina", b =>
                {
                    b.HasOne("PCC.BLL.Data.Komponenta", "Komponenta")
                        .WithMany("Komponenta_Porudzbinas")
                        .HasForeignKey("KomponentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Porudzbina", "Porudzbina")
                        .WithMany("Komponenta_Porudzbinas")
                        .HasForeignKey("PorudzbinaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponenta");

                    b.Navigation("Porudzbina");
                });

            modelBuilder.Entity("PCC.BLL.Data.Porudzbina", b =>
                {
                    b.HasOne("PCC.BLL.Data.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokacija");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun", b =>
                {
                    b.HasOne("PCC.BLL.Data.Lokacija", "Lokacija")
                        .WithMany("Racuni")
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Zaposleni", "Zaposleni")
                        .WithMany("Racuni")
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokacija");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun_Komponenta", b =>
                {
                    b.HasOne("PCC.BLL.Data.Komponenta", "Komponenta")
                        .WithMany("Racun_Komponentas")
                        .HasForeignKey("KomponentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Racun", "Racun")
                        .WithMany("Racun_Komponentas")
                        .HasForeignKey("RacunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponenta");

                    b.Navigation("Racun");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun_Racunar", b =>
                {
                    b.HasOne("PCC.BLL.Data.Racun", "Racun")
                        .WithMany("Racun_Racunars")
                        .HasForeignKey("RacunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Racunar", "Racunar")
                        .WithMany("Racun_Racunars")
                        .HasForeignKey("RacunarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racun");

                    b.Navigation("Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar_Komponenta", b =>
                {
                    b.HasOne("PCC.BLL.Data.Komponenta", "Komponenta")
                        .WithMany("Racunar_Komponentas")
                        .HasForeignKey("KomponentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Racunar", "Racunar")
                        .WithMany("Racunar_Komponentas")
                        .HasForeignKey("RacunarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponenta");

                    b.Navigation("Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar_Nalog", b =>
                {
                    b.HasOne("PCC.BLL.Data.Nalog", "Nalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Racunar", "Racunar")
                        .WithMany("Racunar_Nalogs")
                        .HasForeignKey("RacunarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nalog");

                    b.Navigation("Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Stanje", b =>
                {
                    b.HasOne("PCC.BLL.Data.Komponenta", "Komponenta")
                        .WithMany()
                        .HasForeignKey("KomponentaID");

                    b.HasOne("PCC.BLL.Data.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Racunar", "Racunar")
                        .WithMany()
                        .HasForeignKey("RacunarID");

                    b.Navigation("Komponenta");

                    b.Navigation("Lokacija");

                    b.Navigation("Racunar");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje", b =>
                {
                    b.HasOne("PCC.BLL.Data.Lokacija", "NaLokaciju")
                        .WithMany()
                        .HasForeignKey("NaLokacijuLokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Zaposleni", "Poslao")
                        .WithMany()
                        .HasForeignKey("PoslaoZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Lokacija", "SaLokacije")
                        .WithMany()
                        .HasForeignKey("SaLokacijeLokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NaLokaciju");

                    b.Navigation("Poslao");

                    b.Navigation("SaLokacije");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje_Komponenta", b =>
                {
                    b.HasOne("PCC.BLL.Data.Komponenta", "Komponenta")
                        .WithMany("Trebovanje_Komponentas")
                        .HasForeignKey("KomponentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Trebovanje", "Trebovanje")
                        .WithMany("Trebovanje_Komponentas")
                        .HasForeignKey("TrebovanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponenta");

                    b.Navigation("Trebovanje");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje_Racunar", b =>
                {
                    b.HasOne("PCC.BLL.Data.Racunar", "Racunar")
                        .WithMany("Trebovanje_Racunars")
                        .HasForeignKey("RacunarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCC.BLL.Data.Trebovanje", "Trebovanje")
                        .WithMany("Trebovanje_Racunars")
                        .HasForeignKey("TrebovanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racunar");

                    b.Navigation("Trebovanje");
                });

            modelBuilder.Entity("PCC.BLL.Data.Zaposleni", b =>
                {
                    b.HasOne("PCC.BLL.Data.Lokacija", "Lokacija")
                        .WithMany("Zaposleni")
                        .HasForeignKey("LokacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokacija");
                });

            modelBuilder.Entity("PCC.BLL.Data.Komponenta", b =>
                {
                    b.Navigation("Komponenta_Porudzbinas");

                    b.Navigation("Racun_Komponentas");

                    b.Navigation("Racunar_Komponentas");

                    b.Navigation("Trebovanje_Komponentas");
                });

            modelBuilder.Entity("PCC.BLL.Data.Lokacija", b =>
                {
                    b.Navigation("Racuni");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("PCC.BLL.Data.Porudzbina", b =>
                {
                    b.Navigation("Komponenta_Porudzbinas");

                    b.Navigation("ListaKomponenta");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racun", b =>
                {
                    b.Navigation("Racun_Komponentas");

                    b.Navigation("Racun_Racunars");
                });

            modelBuilder.Entity("PCC.BLL.Data.Racunar", b =>
                {
                    b.Navigation("Racun_Racunars");

                    b.Navigation("Racunar_Komponentas");

                    b.Navigation("Racunar_Nalogs");

                    b.Navigation("Trebovanje_Racunars");
                });

            modelBuilder.Entity("PCC.BLL.Data.Trebovanje", b =>
                {
                    b.Navigation("Trebovanje_Komponentas");

                    b.Navigation("Trebovanje_Racunars");
                });

            modelBuilder.Entity("PCC.BLL.Data.Zaposleni", b =>
                {
                    b.Navigation("Racuni");
                });
#pragma warning restore 612, 618
        }
    }
}
